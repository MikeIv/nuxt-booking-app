stages:
  - build
  - deploy

build frontend:
  stage: build
  image: node:20.19-alpine  # Можно попробовать `node:20-alpine` если ошибка останется
  variables:
    VITE_BASE_API_URL: https://varvarka-api.grandfs-develop.ru/api/v1/
  before_script:  # Добавляем очистку перед установкой
    - rm -rf node_modules package-lock.json
  script:
    - npm install --no-optional  # Игнорируем опциональные зависимости (если проблема с oxc-parser)
    - npm run build
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == 'true'
  tags:
    - docker
    - $CI_JOB_STAGE

deploy develop:
  stage: deploy
  environment:
    name: dev
    url: https://varvarka-v2.grandfs-develop.ru/
  script:
    - cp -rf public /var/www/varvarka/${CI_COMMIT_BRANCH}
    - cd /var/www/varvarka/${CI_COMMIT_BRANCH}
    - git pull ${CI_REPOSITORY_URL} ${CI_COMMIT_BRANCH}
    - |
      # Telegram notification publish
      CI_ESCAPED_AUTHOR=`echo $CI_COMMIT_AUTHOR | sed -e "s/</\&lt;/" -e "s/>/\&gt;/"`
      curl -s -X POST -H "Content-Type: application/json" \
        -d "{\"chat_id\":${TELEGRAM_GROUP},\"parse_mode\":\"HTML\",\"disable_web_page_preview\":true,\"text\":\"Загружено <a href='${CI_ENVIRONMENT_URL}'><b>${CI_PROJECT_NAME} / ${CI_ENVIRONMENT_NAME}</b></a>\nВетка: ${CI_COMMIT_BRANCH}\nАвтор: ${CI_ESCAPED_AUTHOR}\nTitle: ${CI_COMMIT_TITLE}\"}" \
        https://api.telegram.org/bot${TELEGRAM_BOT}/sendMessage > /dev/null
  only:
    refs:
      - develop
  tags:
    - shell
    - grand208